{"id":"LGUn","dependencies":[{"name":"C:\\Users\\kenny\\OneDrive\\Documents\\nutritional_dashboard\\package.json","includedInParent":true,"mtime":1597472992364},{"name":"C:\\Users\\kenny\\OneDrive\\Documents\\nutritional_dashboard\\.babelrc","includedInParent":true,"mtime":1597471847656},{"name":"C:\\Users\\kenny\\OneDrive\\Documents\\nutritional_dashboard\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1595699475044},{"name":"./toString","loc":{"line":1,"column":23},"parent":"C:\\Users\\kenny\\OneDrive\\Documents\\nutritional_dashboard\\node_modules\\lodash\\escapeRegExp.js","resolved":"C:\\Users\\kenny\\OneDrive\\Documents\\nutritional_dashboard\\node_modules\\lodash\\toString.js"}],"generated":{"js":"var e=require(\"./toString\"),r=/[\\\\^$.*+?()[\\]{}|]/g,t=RegExp(r.source);function o(o){return(o=e(o))&&t.test(o)?o.replace(r,\"\\\\$&\"):o}module.exports=o;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":7,"column":0},"generated":{"line":1,"column":28}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":7,"column":0},"generated":{"line":1,"column":30}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":8,"column":0},"generated":{"line":1,"column":52}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":8,"column":0},"generated":{"line":1,"column":54}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":8,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":8,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":25,"column":0},"generated":{"line":1,"column":71}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":25,"column":0},"generated":{"line":1,"column":80}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":25,"column":0},"generated":{"line":1,"column":82}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":27,"column":0},"generated":{"line":1,"column":85}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":26,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":26,"column":0},"generated":{"line":1,"column":94}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":26,"column":0},"generated":{"line":1,"column":96}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":27,"column":0},"generated":{"line":1,"column":101}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":27,"column":0},"generated":{"line":1,"column":103}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":27,"column":0},"generated":{"line":1,"column":108}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":28,"column":0},"generated":{"line":1,"column":111}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":28,"column":0},"generated":{"line":1,"column":113}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":28,"column":0},"generated":{"line":1,"column":121}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":28,"column":0},"generated":{"line":1,"column":123}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":29,"column":0},"generated":{"line":1,"column":131}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":32,"column":0},"generated":{"line":1,"column":133}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":32,"column":0},"generated":{"line":1,"column":140}},{"source":"../node_modules/lodash/escapeRegExp.js","original":{"line":32,"column":0},"generated":{"line":1,"column":148}}],"sources":{"../node_modules/lodash/escapeRegExp.js":"var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n"},"lineCount":null}},"error":null,"hash":"f960ab0843110467a644580b8c9102a4","cacheData":{"env":{}}}